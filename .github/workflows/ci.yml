jobs:
  compile_all_maps:
    name: Compile All Maps
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
    - name: Collect Workflow Telemetry
      uses: Nfsaavedra/workflow-telemetry-action@raw_data
      with:
        save_raw_stats: true
    - uses: actions/checkout@v4
    - name: Setup Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-byond
        path: $HOME/BYOND
    - name: Compile All Maps
      run: 'tools/ci/install_byond.sh

        source $HOME/BYOND/byond/bin/byondsetup

        tools/ci/generate_maplist.sh

        tools/ci/dm.sh -Mci_map_testing paradise.dme

        '
  run_linters:
    name: Run Linters
    permissions: write-all
    runs-on: ubuntu-22.04
    steps:
    - name: Collect Workflow Telemetry
      uses: Nfsaavedra/workflow-telemetry-action@raw_data
      with:
        save_raw_stats: true
    - uses: actions/checkout@v4
    - name: Setup Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-spacemandmm
        path: $HOME/SpacemanDMM
    - name: Install Tools
      run: 'bash tools/ci/install_build_deps.sh

        bash tools/ci/install_dreamchecker.sh

        '
    - uses: actions/setup-python@v5
      with:
        cache: pip
        python-version: 3.11.6
    - uses: actions/setup-node@v4
      with:
        cache: yarn
        cache-dependency-path: ./tgui/yarn.lock
        node-version: 20
    - name: Install python packages
      run: pip3 install -r tools/requirements.txt
    - name: Run Linters
      run: 'find . -name "*.json" -not -path "*/node_modules/*" -print0 | xargs -0
        python3 ./tools/ci/json_verifier.py

        tgui/bin/tgui --ci

        tools/ci/check_grep.sh

        python3 tools/ci/check_line_endings.py

        python3 tools/ci/unticked_files.py ${GITHUB_WORKSPACE}

        '
    - name: Run DreamChecker
      run: ~/dreamchecker 2>&1 | bash tools/ci/annotate_dm.sh
      shell: bash
  unit_tests_and_sql:
    name: Unit Tests + SQL Validation
    permissions: write-all
    runs-on: ubuntu-22.04
    services:
      mariadb:
        env:
          MYSQL_ROOT_PASSWORD: root
        image: mariadb:latest
        options: --health-cmd "mariadb-admin ping" --health-interval 10s --health-timeout
          5s --health-retries 10
        ports:
        - 3306
    steps:
    - name: Collect Workflow Telemetry
      uses: Nfsaavedra/workflow-telemetry-action@raw_data
      with:
        save_raw_stats: true
    - uses: actions/checkout@v4
    - name: Setup Cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-byond
        path: $HOME/BYOND
    - name: Setup & Validate DB
      run: 'sudo systemctl start mysql

        python3 tools/ci/generate_sql_scripts.py

        tools/ci/validate_sql.sh

        '
    - name: Install RUST_G Deps
      run: 'sudo dpkg --add-architecture i386

        sudo apt update || true

        sudo apt install libgcc-s1:i386

        bash tools/ci/install_rustg.sh

        '
    - name: Install DMJIT
      run: 'sudo apt install libncurses6:i386

        bash tools/ci/install_dmjit.sh

        '
    - name: Compile & Run Unit Tests
      run: 'tools/ci/install_byond.sh ''${{ matrix.byondtype }}''

        source $HOME/BYOND/byond/bin/byondsetup

        tools/ci/dm.sh -DCIBUILDING paradise.dme

        echo ''${{ matrix.maptype }}'' > data/next_map.txt

        tools/ci/run_server.sh

        '
    strategy:
      fail-fast: false
      matrix:
        byondtype:
        - STABLE
        maptype:
        - /datum/map/cyberiad
        - /datum/map/delta
        - /datum/map/cerestation
        - /datum/map/celestation
        - /datum/map/nova
name: CI
'on':
- workflow_dispatch
permissions: write-all
